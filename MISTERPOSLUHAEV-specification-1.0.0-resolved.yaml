---
openapi: 3.0.0
info:
  title: Blocking payments
  description: API которое описывает блокировку и разблокировку платежей клиентов
  contact:
    email: mister.posluhaev@yandex.ru
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/MISTERPOSLUHAEV/specification/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /Blocking:
    post:
      tags:
      - blocking
      - payments
      description: |
        Метод отвечает за блокировку платежей клиента
      operationId: blockingPayments
      parameters:
      - name: client_id
        in: query
        description: запрос позволяющий заблокировать платежи конкретного клиента
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: платежи конкретного клиента будут заблокированы
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Неправильный запрос
          content:
            application/json:
              schema:
                type: string
  /Unblocking:
    post:
      tags:
      - unblocking
      - payments
      description: |
        Метод отвечает за разблокировку платежей клиента
      operationId: unblockingPayments
      parameters:
      - name: client_id
        in: query
        description: запрос позволяющий разблокировать платежи конкретного клиента
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: платежи конкретного клиента будут разблокированы
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Неправильный запрос
          content:
            application/json:
              schema:
                type: string
  /Chek:
    get:
      tags:
      - chek
      - payments
      description: |
        Метод отвечает за проверку статуса блокировки
      operationId: chekBlock
      parameters:
      - name: client_id
        in: query
        description: запрос позволяющий проверить статус блокировки клиента
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: отобразится список клиентов выбранных по id для проверки статуса блокировки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
        "400":
          description: Неправильный запрос
          content:
            application/json:
              schema:
                type: string
  /fraudChek:
    get:
      tags:
      - chek
      - payments
      - fraud
      description: |
        Метод позволяющий отличить блокировки мошенников от блокировок добропорядочных клиентов
      operationId: fraudChek
      parameters:
      - name: client_id
        in: query
        description: запрос позволяющий проверить является ли клиент потенциальным мошенником
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: payment_id
        in: query
        description: запрос позволяющий проверить является ли операция мошеннической
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: отобразится клиент с информацией о том является ли он потенциальным мошенником
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
        "201":
          description: отобразится список платежей выбранных по id с информацией о том являются ли они мошенническими
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payments'
        "400":
          description: Неправильный запрос
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    client:
      required:
      - age
      - blockStatus
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 126
        name:
          type: string
          example: Иванов Иван Иванович
        blockStatus:
          type: boolean
          format: boolean
          example: true
        age:
          type: integer
          format: int64
          example: 21
    payments:
      required:
      - blockStatus
      - client_id
      - date
      - id
      - purpose
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 126
        purpose:
          type: string
          example: Перевод на карту ...
        blockStatus:
          type: boolean
          format: boolean
          example: false
        date:
          type: string
          format: date-time
        client_id:
          type: integer
          format: int64
          example: 126
